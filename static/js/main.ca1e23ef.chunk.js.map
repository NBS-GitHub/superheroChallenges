{"version":3,"sources":["Header.js","AddTask.js","Task.js","TaskList.js","About.js","Error.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","NavLink","to","exact","AddTask","minDate","Date","toISOString","slice","state","text","checked","date","_this","handleDate","e","setState","target","value","handleText","handleCheckbox","handleSubmit","preventDefault","_this$state","length","props","add","maxDate","this","onSubmit","className","type","placeholder","onChange","id","htmlFor","min","max","Component","Task","_props$task","task","active","important","finishDate","style","color","onClick","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","src_Task_0","key","doneTasks","concat","About","Error","src","title","Footer","href","rel","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteTask","toConsumableArray","changeTaskStatus","Array","from","forEach","getTime","addTask","drawId","prevState","S4","Math","random","toString","substring","_this2","BrowserRouter","basename","process","src_Header_0","Switch","Route","path","render","src_AddTask_0","src_TaskList_0","component","src_Footer_0","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca1e23ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>superhero challenges</h1>\r\n            <ul>\r\n                <li><NavLink to='/' exact>Home</NavLink></li>\r\n                <li><NavLink to='/about'>About</NavLink></li>\r\n            </ul>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends Component {\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n    state = {\r\n        text: '',\r\n        checked: false,\r\n        date: this.minDate\r\n    }\r\n\r\n    handleDate = e => {\r\n        this.setState({\r\n            date: e.target.value\r\n        });\r\n    }\r\n\r\n    handleText = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { text, checked, date } = this.state;\r\n        if (text.length < 1) return;\r\n        const add = this.props.add(text, date, checked);\r\n        if (add) {\r\n            this.setState({\r\n                text: '',\r\n                checked: false,\r\n                date: this.minDate\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n        maxDate += '-12-31';\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h2>Add Challenge</h2>\r\n                <div className=\"inputs\">\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder='Enter Challenge Name' value={this.state.text} onChange={this.handleText} />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input id='important' type=\"checkbox\" checked={this.state.checked} onChange={this.handleCheckbox} />\r\n                        <label htmlFor=\"important\">High Priority</label>\r\n                    </div>\r\n                    <div className=\"row date\">\r\n                        <label htmlFor=\"deadline\">Deadline: </label>\r\n                        <input id='deadline' type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n                    </div>\r\n                    <button>do it!</button>\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport './Task.css';\r\n\r\nconst Task = props => {\r\n    const style = {\r\n        color: 'var(--red)',\r\n    }\r\n    const { text, date, id, active, important, finishDate } = props.task;\r\n    if (active) {\r\n        return (\r\n            <div className='task unfinished'>\r\n                <div className='row'>\r\n                    <strong>{important ? <span style={style}>! &emsp;</span> : <span>&nbsp;&nbsp;&emsp;</span>} {text}</strong>\r\n                </div>\r\n                <div className='row'>\r\n                    <span>to do by {date}</span>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <button onClick={() => props.change(id)}>Done</button>\r\n                    <button onClick={() => props.delete(id)}>X</button>\r\n                </div>\r\n            </div >\r\n        );\r\n    } else {\r\n        const finish = new Date(finishDate).toLocaleString();\r\n        return (\r\n            <div className='task finished'>\r\n                <div className='row'>\r\n                    <strong>{text}</strong><span> (to do by {date})</span>\r\n                </div>\r\n                <div className='row'>accomplished <span>{finish}</span></div>\r\n                <button onClick={() => props.delete(id)}>X</button>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\nimport './TaskList.css';\r\n\r\nconst TaskList = props => {\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    if (active.length > 1) {\r\n        active.sort((a, b) => {\r\n            a = a.text.toLowerCase();\r\n            b = b.text.toLowerCase();\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0;\r\n        });\r\n    }\r\n    if (done.length > 1) {\r\n        done.sort((a, b) => b.finishDate - a.finishDate);\r\n    }\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />);\r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />);\r\n    return (\r\n        <div className='tasksWrapper'>\r\n            <div className='todo'>\r\n                <h2>Challenges to do {active.length > 0 && `(${active.length})`}</h2>\r\n                {activeTasks.length > 0 ? activeTasks : <p>All challenges done</p>}\r\n            </div>\r\n            <div className='done'>\r\n                <h3>Challenges done ({done.length})</h3>\r\n                {doneTasks}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='about'>\r\n            <h3>about</h3>\r\n            <p>What is the difference between an ordinary superhero and a legendary one? The latter has got the SuCh-System&trade; - which stands for the superhero Challenges Management System!</p>\r\n            <p>Flood, asteroid, volcano, or maybe an alien attack? Peace of cake! Be always on time with SuCh-System&trade;!</p>\r\n            <p>With this intuitive, cutting-edge app you can manage your challenges in a smooth and convenient way.</p>\r\n            <p>Save your time and save the word<br />with the SuCh-System&trade;!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Error.css';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className='error'>\r\n            <h3>The Jamerikan - Wrong Path</h3>\r\n            <iframe src=\"https://www.youtube.com/embed/94wFAzwO2oI\" title='The Jamerikan - Wrong Path'>\r\n            </iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h3><a href='http://frontepic.com' target='_blank' rel=\"noopener noreferrer\" title='frontEpic.com'><small>front</small>Epic</a> &copy; 2k19</h3>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport AddTask from './AddTask';\r\nimport TaskList from './TaskList';\r\nimport About from './About';\r\nimport Error from './Error';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.drawId = () => {\r\n      let S4 = function () {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n      };\r\n      return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    }\r\n    this.state = {\r\n      tasks: [\r\n        {\r\n          id: this.drawId(),\r\n          text: 'stop the volcano eruption - Italy',\r\n          date: '2019-02-15',\r\n          important: true,\r\n          active: true,\r\n          finishDate: null\r\n        },\r\n        {\r\n          id: this.drawId(),\r\n          text: 'milk x2, bread, ham, cheese',\r\n          date: '2019-05-23',\r\n          important: false,\r\n          active: true,\r\n          finishDate: null\r\n        },\r\n        {\r\n          id: this.drawId(),\r\n          text: 'save people from the flood in the central Brasil',\r\n          date: '2019-02-12',\r\n          important: true,\r\n          active: true,\r\n          finishDate: null\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  deleteTask = id => {\r\n    let tasks = [...this.state.tasks];\r\n    tasks = tasks.filter(task => task.id !== id);\r\n    this.setState({ tasks });\r\n  }\r\n\r\n  changeTaskStatus = id => {\r\n    const tasks = Array.from(this.state.tasks);\r\n    tasks.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime();\r\n      }\r\n    });\r\n    this.setState({ tasks });\r\n  }\r\n\r\n  addTask = (text, date, important) => {\r\n    const task = {\r\n      id: this.drawId(),\r\n      text,\r\n      date,\r\n      important,\r\n      active: true,\r\n      finishDate: null\r\n    }\r\n    this.setState(prevState => ({\r\n      tasks: [...prevState.tasks, task]\r\n    }));\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className='appWrap'>\r\n          <Header />\r\n          <main>\r\n            <Switch>\r\n              <Route path='/' exact render={\r\n                () =>\r\n                  <div>\r\n                    <AddTask add={this.addTask} />\r\n                    <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\r\n                  </div>\r\n              } />\r\n              <Route path='/about' component={About} />\r\n              <Route path='' component={Error} />\r\n            </Switch>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      </Router >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}